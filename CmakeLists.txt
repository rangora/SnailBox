cmake_minimum_required(VERSION 3.26)

set(PROJECT_NAME SnailBox)
set(CMAKE_CXX_STANDARD 20)

if(WIN32)
    if(MSVC)
        # 디버거 옵션에 /Z7을 포함한다.(컴파일된 오브젝트 파일내에 디버그 정보를 포함시키도록 함)
        set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Z7")
        set(CMAKE_DEBUG_POSTFIX "d")
    endif()
endif()

project(${PROJECT_NAME} LANGUAGES CXX)

# Set variables.
set(INSTALL_DIR ${PROJECT_BINARY_DIR}/install)
set(INCLUDE_DIR ${INSTALL_DIR}/include)
set(LIB_DIR ${INSTALL_DIR}/lib)
set(SOURCE_ROOT src)
set(DEP_LIST)
set(DEP_LIBS)

file(GLOB MAIN_SOURCE
    "src/Core/*.h"
    "src/Core/*.cpp",
    "src/Core/Math/*.h",
    "src/Core/Math/*.cpp",
    "src/Render/Opengl/*.h"
    "src/Render/Opengl/*.cpp"
    "src/Render/*.h"
    "src/Render/*.cpp"
    "src/*.cpp"
    "src/*.h"
    "src/*.hpp",
    "src/gl.c"
)
add_executable(${PROJECT_NAME} ${MAIN_SOURCE})

# build_dependencies 사용 안함
# include(ExternalProjects.cmake)

# imgui
add_subdirectory(imgui)
target_include_directories(imgui PRIVATE thirdparty/include) # 모두 포함?

target_include_directories(${PROJECT_NAME} PUBLIC ${SOURCE_ROOT})
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_SOURCE_DIR}/imgui)
target_include_directories(${PROJECT_NAME} PUBLIC thirdparty/include) # thirdParties

target_link_libraries(${PROJECT_NAME} PUBLIC imgui) # imgui

target_link_directories(${PROJECT_NAME} PUBLIC thirdparty/lib)
target_link_libraries(${PROJECT_NAME} PUBLIC spdlog)
target_link_libraries(${PROJECT_NAME} PUBLIC glfw3)

add_dependencies(${PROJECT_NAME} imgui) # imgui dependency